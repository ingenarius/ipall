#!/usr/bin/python2.4

"""
*****************************
IP@LL IP addressmanagement
Copyright 2007 racyAPz
http://www.racyapz.at
*****************************
"""

import Html as HTML
import DBmy
import IpallUser
from Sessionclass import Session
import os
from Configobj import ConfigObj
from Cookie import SimpleCookie


def tree_nodes(networks, rights):
    """recursive function for displaying networks and subnets
    networks    ...     tuple of networks to display"""
                    
    ### definitions of variables
    depth = len(path.split(":"))
    p = int(path.split(":")[depth-1])
    childs = ()
            
    #print networks
    for n in networks:
            id_found = 0
            ### permissions of the network(s)
            if group == 1 or rights[2] == 1:
                net_perm = ([1,1,1,1],)
            else:   
                sql_perm = """SELECT delete_net, edit_net, subnet_net, view_net FROM ipall_rights 
                    WHERE LOCATE(path, '%s') > 0 AND group_id=%u ORDER BY path DESC LIMIT 1""" % (n[3], group)
                net_perm = conn.get_data(sql_perm)
            if net_perm == ():
                net_perm = [0,0,0,0]
            else:
                net_perm = net_perm[0]
            #print net_perm
            
            if net_perm[3] != 1:
                continue
            else:
                print """<tr><td>"""

                print """<table class=table_networks><tr class=white height=20>"""

                if net_perm[3] == 1:
                    indent = len(n[3].split(":")) - 2
                    for i in range(0, indent*2):
                        print "&nbsp;"
                    print "<font class=TextPurpleBold>" + n[1] + "</font>"
                    print "<font class=TextPurple>" + " [" + n[2] + "]" + "</font><br>"

                print """</tr></table>"""

                child_query = """SELECT id, label, net_name, path FROM ipall_ip WHERE parent_id=%u ORDER BY address""" % (int(n[0]))
                childs = conn.get_data(child_query)
                tree_nodes(childs, rights)

                print """</td></tr>"""


def main():
    """entry point for executing IPALL - view network details"""

    ### definitions of variables
    global rights, conn, group, id, path

    if os.environ.has_key('QUERY_STRING') and os.environ['QUERY_STRING'] != "":
        qs = os.environ['QUERY_STRING']
        if len(qs.split("&")) == 1:
            id = int(qs.split("&")[0])
    else:
        current_user = ""
        id = 0

    ### create database connection object
    cfg = ConfigObj("ipall.cfg")
    db_host = cfg['Database']['db_host']
    db_user = cfg['Database']['db_user']
    db_pw = cfg['Database']['db_pw']
    db = cfg['Database']['db']
    conn = DBmy.db(db_host, db_user, db_pw, db)

    ### User
    s = Session(conn)
    current_user = s.check_user()
    #company = s.check_cookie()
    HTML.simple_header()
    if current_user == "":
        HTML.simple_redirect_header(cfg['Server']['web_dir'])
        return
    else:
        HTML.popup_body()
    user = IpallUser.User(current_user)
    group, company_id  = user.get_group_id()
    rights = user.get_rights()
    if group == 0:
        HTML.restriction_message(1)
        HTML.popup_footer()
        return

    ipall_dir = cfg['Server']['ipall_dir']
##    referer = str(os.environ['HTTP_REFERER'])

    query = """SELECT id, label, net_name, path FROM ipall_ip WHERE id=%u """ % (id)
    details = conn.get_data(query)

    if group != 1 and rights[2] != 1: # user is not member of group "Super Administrators" or is company admin
        net_perm = conn.get_net_permissions(str(details[0][3]), group)
        if net_perm == () or net_perm == "":
            net_perm = 0
        else:
            net_perm = net_perm[3]
    else: # user is member of group "admins"
        net_perm = 1
    
    if net_perm != 1:
        HTML.restriction_message(1)
        HTML.popup_footer()
        return
    else:
        if group == 1 or rights[2] == 1:
            sql_networks = """SELECT id, label, net_name, path FROM ipall_ip WHERE path LIKE '%s:%u:%s' ORDER BY address, label ASC""" % ("%", id, "%")
        else:
            sql_networks = """SELECT i.id, i.label, i.net_name, i.path FROM ipall_ip i, ipall_rights r 
                WHERE (i.path LIKE '%s:%u:%s' AND r.path LIKE i.path) AND 
                r.view_net=1 AND r.group_id=%u
                ORDER BY i.address, i.label ASC""" % ("%", id, "%", group)
        #print sql_networks
        networks = conn.get_data(sql_networks)
        path = details[0][3]
    
        print """<div id="main" class=TextPurple>"""
        print """<table class=table_main border=0>"""
        print """<tr class=lightPurple3 height=20>"""
        print """<td class=TextPurpleBold>Print screen &nbsp;&nbsp;&nbsp;
            <a href="javascript:print();"> <img src="%s/images/printOn.png" border=0> </a></td>""" % ( ipall_dir ) 
        print """</tr>"""
        print """<tr>"""
        print """<td>"""
        print """<br>"""

        tree_nodes(details, rights)

        print """<br>"""
        print """</td>"""
        print """<tr><td>&nbsp;</td></tr>"""
        print """</table>"""
        print """</div>"""
        
    
    HTML.popup_footer()


main()
